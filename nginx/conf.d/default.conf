server {
    listen 80;
    server_name yaniddze.com;

    # letsencrypt validation
    # location / {
    #     allow all;
    #     root /usr/share/nginx/html/letsencrypt;
    # }

    #Redirect http to https
    # location ~ / {
    #     return 301 https://yaniddze.com$request_uri;
    # }
}

upstream identity {
    server identity-server:80;
}

upstream moneys {
    server moneys-api:80;
}

server {
    listen 443 ssl;
    server_name yaniddze_ssl;
    
    ssl_certificate /etc/nginx/ssl/live/yaniddze.com/fullchain.pem;

    ssl_certificate_key /etc/nginx/ssl/live/yaniddze.com/privkey.pem;
    ssl_dhparam /etc/nginx/dhparam/dhparam-2048.pem;
    ssl_buffer_size 8k;
    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

    location ~ /api/moneys/playground {
        proxy_pass http://moneys;

        proxy_http_version 1.1;

        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host $host;
        proxy_set_header   X-Forwarded-For $remote_addr;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header   X-Forwarded-Proto $scheme;

        add_header Allow "GET, POST, OPTIONS, HEAD, PUT, DELETE, PATCH" always;

        if ( $request_method !~ ^(GET|OPTIONS|POST|HEAD|PUT|DELETE|PATCH)$ ) {
            return 405;
        }
    }

    location /api/moneys {
        proxy_pass http://moneys/;

        proxy_http_version 1.1;

        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host $host;
        proxy_set_header   X-Forwarded-For $remote_addr;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header   X-Forwarded-Proto $scheme;

        add_header Allow "GET, POST, OPTIONS, HEAD, PUT, DELETE, PATCH" always;

        if ( $request_method !~ ^(GET|OPTIONS|POST|HEAD|PUT|DELETE|PATCH)$ ) {
            return 405;
        }
    }

    location / {
        proxy_pass http://identity;
    
        proxy_http_version 1.1;

        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header   X-Forwarded-For $remote_addr;
        proxy_set_header   X-Forwarded-Proto $scheme;

        add_header Allow "GET, POST, OPTIONS, HEAD, PUT, DELETE, PATCH" always;

        if ( $request_method !~ ^(GET|OPTIONS|POST|HEAD|PUT|DELETE|PATCH)$ ) {
            return 405;
        }
    }
}
