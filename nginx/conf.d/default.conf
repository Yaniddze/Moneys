server {
    listen 80;
    server_name yaniddze.com;

    # letsencrypt validation
    location ~ /.well-known/acme-challenge {
        allow all;
        root /usr/share/nginx/html/letsencrypt;
    }

    #Redirect http to https
    location / {
        return 301 https://yaniddze.com$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name yaniddze.com;
    root /public_html;
    
    server_tokens off;
    ssl_certificate /etc/nginx/ssl/live/yaniddze.com/fullchain.pem;

    ssl_certificate_key /etc/nginx/ssl/live/yaniddze.com/privkey.pem;
    ssl_dhparam /etc/nginx/dhparam/dhparam-2048.pem;
    ssl_buffer_size 8k;
    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;


    location / {
        proxy_pass http://identity-server:80;
        proxy_set_header Origin "";
        proxy_set_header Host $host;
        proxy_set_header X-Forwareded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;

        add_header 'Access-Control-Allow-Origin' 'http://localhost:8080' always;
        add_header Allow "GET, POST, HEAD, PUT, DELETE, PATCH" always;

        if ( $request_method !~ ^(GET|POST|HEAD|PUT|DELETE|PATCH)$ ) {
            return 405;
        }
    }

    location /connect/token {
        proxy_pass http://identity-server:80;
        proxy_set_header Origin "";
        proxy_set_header Host $host;
        proxy_set_header X-Forwareded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;

        add_header 'Access-Control-Allow-Origin' 'http://localhost:8080' always;
        add_header Allow "GET, POST, HEAD, PUT, DELETE, PATCH" always;

        if ( $request_method !~ ^(GET|POST|HEAD|PUT|DELETE|PATCH)$ ) {
            return 405;
        }
    }

    # location /api {
    #     proxy_pass http://moneys-api:80;
    #     proxy_set_header Origin "";
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Forwareded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Real-IP $remote_addr;

    #     add_header Allow "GET, POST, HEAD, PUT, DELETE, PATCH" always;

    #     if ( $request_method !~ ^(GET|POST|HEAD|PUT|DELETE|PATCH)$ ) {
    #         return 405;
    #     }
    # }
}